server:
  port: 8085

eureka:
  instance:
    lease-renewal-interval-in-seconds: 5
  client:
    registerWithEureka: true
    serviceUrl:
      defaultZone: ${EUREKA_SERVER:http://localhost:8761/eureka}
    healthcheck:
      enabled: true
    allow-redirects: true

spring:
  application:
    name: gateway-service
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins:
              - "*"
            allowedHeaders: "*"
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - PATCH
              - OPTIONS
              - HEAD
        add-to-simple-url-handler-mapping: true
      routes:
        - id: createSkill
          uri:
            lb://vacancies-service
          predicates:
            - Path=/skills
            - Method=POST
          filters:
            - SetPath=/api/v1/skills
            - JwtAuthenticationFilter
        - id: getSkills
          uri:
            lb://vacancies-service
          predicates:
            - Path=/skills
            - Method=GET
          filters:
            - SetPath=/api/v1/skills
            - JwtAuthenticationFilter
        - id: getUserDetailsByEmail
          uri:
            lb://vacancies-service
          predicates:
            - Path=/userDetails/{email}
            - Method=GET
          filters:
            - SetPath=/api/v1/userDetails/email/{email}
        - id: patchUserDetails
          uri:
            lb://vacancies-service
          predicates:
            - Path=/userDetails
            - Method=PATCH
          filters:
            - SetPath=/api/v1/userDetails
            - JwtAuthenticationFilter
        - id: updateUserDetails
          uri:
            lb://vacancies-service
          predicates:
            - Path=/userDetails/{id}
            - Method=PUT
          filters:
            - SetPath=/api/v1/userDetails/{id}
            - JwtAuthenticationFilter
        - id: createCandidate
          uri:
            lb://vacancies-service
          predicates:
            - Path=/candidates
            - Method=POST
          filters:
            - SetPath=/api/v1/candidates
        - id: getCandidateByEmail
          uri:
            lb://vacancies-service
          predicates:
            - Path=/candidates/email
            - Method=GET
          filters:
            - SetPath=/api/v1/candidates/email
            - JwtAuthenticationFilter
            - ExtractEmailFilter
        - id: uploadEmployerPhoto
          uri:
            lb://vacancies-service
          predicates:
            - Path=/employers/upload
            - Method=POST
          filters:
            - SetPath=/api/v1/employers/upload
            - JwtAuthenticationFilter
        - id: uploadCandidatePhoto
          uri:
            lb://vacancies-service
          predicates:
            - Path=/candidates/upload
            - Method=POST
          filters:
            - SetPath=/api/v1/candidates/upload
            - JwtAuthenticationFilter
        - id: getCandidate
          uri:
            lb://vacancies-service
          predicates:
            - Path=/candidates
            - Method=GET
          filters:
            - SetPath=/api/v1/candidates
            - JwtAuthenticationFilter
        - id: getCandidateById
          uri:
            lb://vacancies-service
          predicates:
            - Path=/candidates/{id}
            - Method=GET
          filters:
            - SetPath=/api/v1/candidates/{id}
            - JwtAuthenticationFilter
        - id: patchCandidate
          uri:
            lb://vacancies-service
          predicates:
            - Path=/candidates
            - Method=PATCH
          filters:
            - SetPath=/api/v1/candidates
            - JwtAuthenticationFilter
        - id: updateCandidate
          uri:
            lb://vacancies-service
          predicates:
            - Path=/candidates/{id}
            - Method=PUT
          filters:
            - SetPath=/api/v1/candidates/{id}
            - JwtAuthenticationFilter
        - id: createEmployer
          uri:
            lb://vacancies-service
          predicates:
            - Path=/employers
            - Method=POST
          filters:
            - SetPath=/api/v1/employers
        - id: updateEmployer
          uri:
            lb://vacancies-service
          predicates:
            - Path=/employers/{id}
            - Method=PUT
          filters:
            - SetPath=/api/v1/employers/{id}
            - JwtAuthenticationFilter
        - id: getEmployerByID
          uri:
            lb://vacancies-service
          predicates:
            - Path=/employers/id/{id}
            - Method=GET
          filters:
            - SetPath=/api/v1/employers/{id}
            - JwtAuthenticationFilter
        - id: getEmployerByEmail
          uri:
            lb://vacancies-service
          predicates:
            - Path=/employers/email
            - Method=GET
          filters:
            - SetPath=/api/v1/employers/email
            - JwtAuthenticationFilter
            - ExtractEmailFilter
        - id: getVacanciesByEmployer
          uri:
            lb://vacancies-service
          predicates:
            - Path=/vacancies/employers/{id}
            - Method=GET
          filters:
            - SetPath=/api/v1/vacancies/employers/{id}
            - JwtAuthenticationFilter
        - id: getVacanciesBySaver
          uri:
            lb://vacancies-service
          predicates:
            - Path=/vacancies/savers/{id}
            - Method=GET
          filters:
            - SetPath=/api/v1/vacancies/savers/{id}
            - JwtAuthenticationFilter
        - id: getVacanciesByCandidate
          uri:
            lb://vacancies-service
          predicates:
            - Path=/vacancies/candidates/{id}
            - Method=GET
          filters:
            - SetPath=/api/v1/vacancies/candidates/{id}
            - JwtAuthenticationFilter
        - id: getVacancies
          uri:
            lb://vacancies-service
          predicates:
            - Path=/vacancies
            - Method=GET
          filters:
            - SetPath=/api/v1/vacancies
            - JwtAuthenticationFilter
        - id: getVacancyById
          uri:
            lb://vacancies-service
          predicates:
            - Path=/vacancies/{id}
            - Method=GET
          filters:
            - SetPath=/api/v1/vacancies/{id}
            - JwtAuthenticationFilter
        - id: createVacancy
          uri:
            lb://vacancies-service
          predicates:
            - Path=/vacancies
            - Method=POST
          filters:
            - SetPath=/api/v1/vacancies
            - JwtAuthenticationFilter
        - id: updateVacancy
          uri:
            lb://vacancies-service
          predicates:
            - Path=/vacancies/{id}
            - Method=PUT
          filters:
            - SetPath=/api/v1/vacancies/{id}
            - JwtAuthenticationFilter
        - id: deleteVacancy
          uri:
            lb://vacancies-service
          predicates:
            - Path=/vacancies/{id}
            - Method=DELETE
          filters:
            - SetPath=/api/v1/vacancies/{id}
            - JwtAuthenticationFilter
        - id: register
          uri:
            lb://authentication-service
          predicates:
            - Path=/register
          filters:
            - SetPath=/auth/register
        - id: authenticate
          uri:
            lb://authentication-service
          predicates:
            - Path=/authenticate
          filters:
            - SetPath=/auth/authenticate
        - id: updateToken
          uri:
            lb://authentication-service
          predicates:
            - Path=/exchange
            - Method=PUT
          filters:
            - SetPath=/auth/exchange
            - ExtractEmailFilter
        - id: changePassword
          uri:
            lb://authentication-service
          predicates:
            - Path=/change/password
            - Method=POST
          filters:
            - SetPath=/auth/change/password
            - JwtAuthenticationFilter
            - ExtractEmailFilter
        - id: logout
          uri:
            lb://authentication-service
          predicates:
            - Path=/logout
            - Method=PUT
          filters:
            - SetPath=/auth/logout
            - ExtractEmailFilter
        - id: saveVacancyForAnalytics
          uri:
            lb://data-analytics
          predicates:
            - Path=/analytics/vacancies
            - Method=POST
          filters:
            - SetPath=/api/v1/analytics/vacancies
            - JwtAuthenticationFilter
        - id: updateVacancyForAnalytics
          uri:
            lb://data-analytics
          predicates:
            - Path=/analytics/vacancies/{id}
            - Method=PUT
          filters:
            - SetPath=/api/v1/analytics/vacancies/{id}
            - JwtAuthenticationFilter
        - id: getVacancyAnalyticsByOriginId
          uri:
            lb://data-analytics
          predicates:
            - Path=/analytics/vacancies/origin/{id}
            - Method=GET
          filters:
            - SetPath=/api/v1/analytics/vacancies/origin/{id}
            - JwtAuthenticationFilter
        - id: getAllVacancyAnalytics
          uri:
            lb://data-analytics
          predicates:
            - Path=/analytics/vacancies
            - Method=GET
          filters:
            - SetPath=/api/v1/analytics/vacancies
            - JwtAuthenticationFilter
        - id: getAllCandidateAnalytics
          uri:
            lb://data-analytics
          predicates:
            - Path=/analytics/candidates
            - Method=GET
          filters:
            - SetPath=/api/v1/analytics/candidates
            - JwtAuthenticationFilter
        - id: saveCandidateAnalytics
          uri:
            lb://data-analytics
          predicates:
            - Path=/analytics/candidates
            - Method=POST
          filters:
            - SetPath=/api/v1/analytics/candidates
            - JwtAuthenticationFilter
        - id: updateCandidateAnalytics
          uri:
            lb://data-analytics
          predicates:
            - Path=/analytics/candidates
            - Method=PUT
          filters:
            - SetPath=/api/v1/analytics/candidates
            - JwtAuthenticationFilter
            - ExtractEmailFilter
        - id: getCandidateAnalyticsById
          uri:
            lb://data-analytics
          predicates:
            - Path=/analytics/candidates/{id}
            - Method=GET
          filters:
            - SetPath=/api/v1/analytics/candidates/{id}
            - JwtAuthenticationFilter
        - id: getCandidateAnalyticsByOriginEmail
          uri:
            lb://data-analytics
          predicates:
            - Path=/analytics/candidates/origin
            - Method=GET
          filters:
            - SetPath=/api/v1/analytics/candidates/origin
            - JwtAuthenticationFilter
            - ExtractEmailFilter
        - id: generateCv
          uri:
            lb://data-analytics
          predicates:
            - Path=/cv
            - Method=POST
          filters:
            - SetPath=/api/v1/cv
            - JwtAuthenticationFilter
        - id: createMentor
          uri:
            lb://mentor-service
          predicates:
            - Path=/mentors
            - Method=POST
          filters:
            - SetPath=/api/v1/mentors
        - id: authenticateMentor
          uri:
            lb://authentication-service
          predicates:
            - Path=/auth
            - Method=POST
          filters:
            - SetPath=/auth/authenticate/mentor
        - id: getMentor
          uri:
            lb://mentor-service
          predicates:
            - Path=/mentors/email/{email}
            - Method=GET
          filters:
            - SetPath=/api/v1/mentors/email/{email}
        - id: updateMentor
          uri:
            lb://mentor-service
          predicates:
            - Path=/mentors/{id}
            - Method=PUT
          filters:
            - SetPath=/api/v1/mentors/{id}
        - id: createStudent
          uri:
            lb://mentor-service
          predicates:
            - Path=/students
            - Method=POST
          filters:
            - SetPath=/api/v1/students
        - id: authenticateStudent
          uri:
            lb://authentication-service
          predicates:
            - Path=/students/auth
            - Method=POST
          filters:
            - SetPath=/api/v1/authenticate/student
        - id: getStudentByEmail
          uri:
            lb://mentor-service
          predicates:
            - Path=/students/email/{email}
            - Method=GET
          filters:
            - SetPath=/api/v1/students/email/{email}
        - id: addCourse
          uri:
            lb://mentor-service
          predicates:
            - Path=/courses/{mentorId}
            - Method=POST
          filters:
            - SetPath=/api/v1/courses/{mentorId}
        - id: getCourseById
          uri:
            lb://mentor-service
          predicates:
            - Path=/courses/{id}
            - Method=GET
          filters:
            - SetPath=/api/v1/courses/{id}
        - id: getAllCourses
          uri:
            lb://mentor-service
          predicates:
            - Path=/courses
            - Method=GET
          filters:
            - SetPath=/api/v1/courses
        - id: deleteCourse
          uri:
            lb://mentor-service
          predicates:
            - Path=/courses/{id}
            - Method=DELETE
          filters:
            - SetPath=/api/v1/courses/{id}
        - id: getCourseByStudent
          uri:
            lb://mentor-service
          predicates:
            - Path=/courses/student/email
            - Method=GET
          filters:
            - SetPath=/api/v1/courses/student/email
            - ExtractEmailFilter
        - id: getCourseByLesson
          uri:
            lb://mentor-service
          predicates:
            - Path=/courses/lesson/{lessonId}
            - Method=GET
          filters:
            - SetPath=/api/v1/courses/lesson/{lessonId}
        - id: updateCourse
          uri:
            lb://mentor-service
          predicates:
            - Path=/courses/{id}
            - Method=PUT
          filters:
            - SetPath=/api/v1/courses/{id}
        - id: getMentorById
          uri:
            lb://mentor-service
          predicates:
            - Path=/mentors/{id}
            - Method=GET
          filters:
            - SetPath=/api/v1/mentors/{id}
        - id: getAllMentors
          uri:
            lb://mentor-service
          predicates:
            - Path=/mentors
            - Method=GET
          filters:
            - SetPath=/api/v1/mentors
        - id: deleteMentor
          uri:
            lb://mentor-service
          predicates:
            - Path=/mentors/{id}
            - Method=DELETE
          filters:
            - SetPath=/api/v1/mentors/{id}
        - id: updateMentor
          uri:
            lb://mentor-service
          predicates:
            - Path=/mentors/{id}
            - Method=/PUT
          filters:
            - SetPath=/api/v1/mentors/{id}
        - id: handleFileUploadMentor
          uri:
            lb://mentor-service
          predicates:
            - Path=/mentors/upload
            - Method=POST
          filters:
            - SetPath=/api/v1/mentors/upload
        - id: createLesson
          uri:
            lb://mentor-service
          predicates:
            - Path=/lessons/{courseId}
            - Method=POST
          filters:
            - SetPath=/api/v1/lessons/{courseId}
        - id: getLessonById
          uri:
            lb://mentor-service
          predicates:
            - Path=/lessons/{id}
            - Method=GET
          filters:
            - SetPath=/api/v1/lessons/{id}
        - id: getAllLessons
          uri:
            lb://mentor-service
          predicates:
            - Path=/lessons
            - Method=Get
          filters:
            - SetPath=/api/v1/lessons
        - id: getLessonByOrder
          uri:
            lb://mentor-service
          predicates:
            - Path=/lessons/course/{courseId}/lesson/{orderInCourse}
            - Method=GET
          filters:
            - SetPath=/api/v1/lessons/course/{courseId}/lesson/{orderInCourse}
        - id: deleteLesson
          uri:
            lb://mentor-service
          predicates:
            - Path=/lessons/{id}
            - Method=DELETE
          filters:
            - SetPath=/api/v1/lessons/{id}
        - id: updateLesson
          uri:
            lb://mentor-service
          predicates:
            - Path=/lessons/course/{courseId}/lesson/{orderInCourse}
            - Method=PUT
          filters:
            - SetPath=/api/v1/lessons/course/{courseId}/lesson/{orderInCourse}
        - id: addStudent
          uri:
            lb://mentor-service
          predicates:
            - Path=/students
            - Method=POST
          filters:
            - SetPath=/api/v1/students
        - id: getStudentById
          uri:
            lb://mentor-service
          predicates:
            - Path=/students/{id}
            - Method=GET
          filters:
            - SetPath=/api/v1/students/{id}
        - id: getAllStudents
          uri:
            lb://mentor-service
          predicates:
            - Path=/students
            - Method=GET
          filters:
            - SetPath=/api/v1/students
        - id: deleteStudent
          uri:
            lb://mentor-service
          predicates:
            - Path=/students/{id}
            - Method=DELETE
          filters:
            - SetPath=/api/v1/students/{id}
        - id: updateStudent
          uri:
            lb://mentor-service
          predicates:
            - Path=/students/{id}
            - Method=PUT
          filters:
            - SetPath=/api/v1/students/{id}
        - id: subscribe
          uri:
            lb://mentor-service
          predicates:
            - Path=/students/course/{courseId}/email
            - Method=PUT
          filters:
            - SetPath=/api/v1/students/course/{courseId}/email
            - ExtractEmailFilter
        - id: isCourseApplied
          uri:
            lb://mentor-service
          predicates:
            - Path=/courses/isApplied/{courseId}/email
            - Method=GET
          filters:
            - SetPath=/api/v1/courses/isApplied/{courseId}/email
            - ExtractEmailFilter
        - id: sendEmail
          uri:
            lb://notification-service
          predicates:
            - Path=/sendMail
            - Method=POST
          filters:
            - SetPath=/sendMail